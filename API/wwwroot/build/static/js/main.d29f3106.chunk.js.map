{"version":3,"sources":["app/stores/CommonStore.ts","app/api/agent.ts","app/stores/ReservationStore.ts","app/stores/UserStore.ts","app/stores/store.ts","app/stores/AdminReservationStore.ts","app/stores/modalStore.ts","app/layout/NavBar.tsx","app/layout/LoadingComponent.tsx","features/filter/FilterReservation.tsx","features/reservations/form/ReservationForm.tsx","features/reservations/dashboard/ReservationList.tsx","features/reservations/dashboard/ReservationDashboard.tsx","features/users/LoginForm.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/common/modals/ModalContainer.tsx","app/layout/PrivateRoute.tsx","features/security/AccessRestriction.tsx","app/layout/PrivateAdminRoute.tsx","features/reservations/adminDashboard/AdminReservationList.tsx","features/reservations/adminDashboard/AdminDashboard.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["CommonStore","token","window","localStorage","getItem","appLoaded","admin","setToken","setAppLoaded","setAdmin","makeAutoObservable","this","reaction","setItem","removeItem","axios","defaults","baseURL","process","interceptors","request","use","config","store","commonStore","headers","Authorization","response","a","console","log","Promise","reject","responseBody","data","requests","url","get","then","body","post","put","delete","agent","Reservations","list","listResUser","details","id","create","reservation","update","updateStatus","status","Account","current","login","user","register","ReservationStore","reservationRegistry","Map","selectedReservation","undefined","editMode","loading","loadingInitial","pendinApproval","FilterMode","setFilterMode","mode","ApproveReservation","resrvationedit","set","DenyReservation","loadingReservations","forEach","el","date","split","setLoadingInitial","loadingUserReservations","state","selectReservation","cancelSelectedReservation","openForm","closeForm","createReservation","uuid","runInAction","updateReservation","deleteReservation","InitStates","Array","from","values","sort","b","Date","parse","filter","x","PendingReservations","ApprovedReservations","DeniedReservations","UserStore","creds","tempRole","history","push","modalStore","closeModal","logout","reservationStore","getUser","adminStore","userStore","modal","open","openModal","content","StoreContext","createContext","useStore","useContext","observer","isAdmin","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","name","Button","onClick","positive","MenuItem","position","Image","image","avatar","spaced","Dropdown","pointing","text","displayName","Link","username","icon","LoadingComponent","Dimmer","active","Loader","FilterReservation","Segment","Header","color","initialState","title","description","reservationType","useState","setReservation","handleInputChange","event","target","value","clearing","Form","onSubmit","autoComplete","Field","placeholder","onChange","Input","type","floated","FilteredReservation","setTarget","ItemGroup","divided","length","map","res","Content","Meta","Description","Extra","e","Label","basic","tag","useEffect","Grid","Column","width","email","password","loginForm","setLoginForm","isSubmiting","setIsSubmiting","error","setError","HandleSubmit","textAlign","height","verticalAlign","maxWidth","size","stacked","fluid","iconPosition","Message","RegisterForm","setRegisterForm","vertical","className","marginBottom","isLoggedIn","Modal","onClose","PrivateRoute","Component","component","rest","render","props","AccessRestriction","marginTop","paddingTop","PrivateAdminRoute","Card","Group","min","max","Math","floor","random","extra","GridColumn","finally","path","HomePage","LoginForm","AdminDashboard","ReservationDashboard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.d29f3106.chunk.js","sourcesContent":["import { makeAutoObservable, reaction } from \"mobx\";\n\nexport default class CommonStore {\n\n    token: string | null  = window.localStorage.getItem('jwt') ;\n    appLoaded = false;\n    admin = false ;\n\n    constructor(){\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.token, \n            token => {\n                  if(token) {\n                      window.localStorage.setItem('jwt', token)\n                  } else {\n                      window.localStorage.removeItem('jwt')\n                  }\n              }\n        )\n    }\n\n\n    setToken = (token: string | null) => {\n        this.token = token;\n    }\n\n    setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n\n    setAdmin = () => {\n        this.admin = true;\n    }\n\n    get isAdmin() {\n        return this.admin;\n    }\n   \n\n}","import axios, { AxiosResponse } from 'axios';\nimport { Reservation } from '../models/Reservation';\nimport { User, UserFormValues } from '../models/user';\nimport { store } from '../stores/store';\nimport { Status } from './../models/Status';\n\n\nconst sleep = (delay: number) => {\n    return new Promise((resolve) =>  {\n        setTimeout(resolve, delay)\n    })\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n//this peace of code makes sure that we send our token with every request\naxios.interceptors.request.use(config => {\n    const token = store.commonStore.token;\n    if(token) config.headers.Authorization = `Bearer ${token}`\n    return config\n})\n\naxios.interceptors.response.use(async response => {\n    try {\n        if(process.env.NODE_ENV === 'development')  await sleep(1000);\n        return response;\n    } catch (error) {\n        console.log(error);\n        return await Promise.reject(error);\n    }\n})\n\n\n\nconst responseBody = <T> (response : AxiosResponse<T>) => response.data;\n\nconst requests = {\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\n    post: <T>  (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n    put:  <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n    del: <T>  (url: string) => axios.delete<T>(url).then(responseBody)\n}\n\nconst Reservations = {\n    list: () => requests.get<Reservation[]>('/Reservations'),\n    listResUser: () => requests.get<Reservation[]>('/Reservations/UserReservations'),\n    details: (id: string) => requests.get<Reservation>(`/Reservations/${id}`),\n    create: (reservation: Reservation) => requests.post<void>('/Reservations', reservation),\n    update: (reservation: Reservation) => requests.put<void>(`/Reservations/${reservation.id}`, reservation),\n    updateStatus: (status: Status) => requests.put<void>(`/Reservations/status/${status.id}`, status),\n    delete: (id: string) => requests.del<void>(`/Reservations/${id}`)\n\n}\n\nconst Account = {\n    current: () => requests.get<User>('/account'),\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user)\n}\n\nconst agent = {\n    Reservations,\n    Account\n}\n\nexport default agent;\n\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Reservation } from \"../models/Reservation\";\nimport {v4 as uuid} from 'uuid';\nexport default class ReservationStore {\n    \n    // reservations: Reservation[] = [];\n    reservationRegistry = new Map<string, Reservation>();\n    selectedReservation: Reservation | undefined = undefined;\n    editMode = false;\n    loading = false;\n    loadingInitial = true;\n    pendinApproval: string = '';\n    FilterMode: string = \"pending\";\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n\n\n    //Filter Reservations byDate\n    get reservationsByDate() {\n        return Array.from(this.reservationRegistry.values()).sort((a, b) => Date.parse(a.date) - Date.parse(b.date));\n    }\n    //Get Only Approved Reservations\n    get ApprovedReservations() {\n        // eslint-disable-next-line eqeqeq\n        return [...Array.from(this.reservationRegistry.values()).filter(x => x.status == 1)];\n    }\n    get DeniedReservations() {\n        // eslint-disable-next-line eqeqeq\n        return [...Array.from(this.reservationRegistry.values()).filter(x => x.status == 0)];\n    }\n    get PendingReservations() {\n        // eslint-disable-next-line eqeqeq\n        return [...Array.from(this.reservationRegistry.values()).filter(x => x.status == 2)];\n    }\n\n    get FilteredReservation() {\n        if(this.FilterMode === \"pending\" ) return this.PendingReservations;\n        if(this.FilterMode === \"approved\" ) return this.ApprovedReservations;\n        if(this.FilterMode === \"denied\" ) return this.DeniedReservations;\n        return []\n    }\n\n    setFilterMode = (mode: string) => {\n        this.FilterMode = mode;\n    }\n\n    ApproveReservation  = async (id: string) => {\n        let resrvationedit = this.reservationRegistry.get(id);\n        resrvationedit && this.reservationRegistry.set(id, {...resrvationedit, status: 1});\n        \n        try {\n            await agent.Reservations.updateStatus({id: id,status: 1});\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    DenyReservation  = async (id: string) => {\n        let resrvationedit = this.reservationRegistry.get(id);\n        resrvationedit && this.reservationRegistry.set(id, {...resrvationedit, status: 0});\n        \n        try {\n            await agent.Reservations.updateStatus({id: id,status: 0});\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //Load reservations for admin\n    loadingReservations = async () => {\n        // this.loadingInitial = true;\n        // this.setLoadingInitial(true)\n        try {\n            const reservations = await agent.Reservations.list();\n            reservations.forEach(el => {\n                el.date = el.date.split('T')[0];\n                // this.reservations.push(el);\n                this.reservationRegistry.set(el.id, el);\n              })\n            //   this.loadingInitial = false;\n            this.setLoadingInitial(false)\n\n        } catch (error) {\n            console.log(error);\n            // this.loadingInitial = false;\n            this.setLoadingInitial(false)\n        }\n    }\n\n\n    //Load only the users reservations\n    loadingUserReservations = async () => {\n        // this.loadingInitial = true;\n        // this.setLoadingInitial(true)\n        try {\n            const reservations = await agent.Reservations.listResUser();\n            reservations.forEach(el => {\n                el.date = el.date.split('T')[0];\n                // this.reservations.push(el);\n                this.reservationRegistry.set(el.id, el);\n              })\n            //   this.loadingInitial = false;\n            this.setLoadingInitial(false)\n\n        } catch (error) {\n            console.log(error);\n            // this.loadingInitial = false;\n            this.setLoadingInitial(false)\n        }\n    }\n\n\n    setLoadingInitial = (state: boolean) => {\n        this.loadingInitial = state;\n    }\n\n    selectReservation = (id : string) => {\n        // this.selectedReservation = this.reservations.find(a => a.id === id);\n        this.selectedReservation = this.reservationRegistry.get(id);\n    }\n\n    cancelSelectedReservation = () => {\n        this.selectedReservation = undefined;\n    }\n\n    openForm = (id?: string) => {\n        id ? this.selectReservation(id) : this.cancelSelectedReservation();\n        this.editMode = true;\n    }\n\n    closeForm = () => {\n        this.editMode = false;\n    }\n\n    createReservation = async (reservation: Reservation) => {\n            this.loading = true;\n            reservation.id = uuid();\n            try {\n                await agent.Reservations.create(reservation);\n                runInAction(() => {\n                    // this.reservations.push(reservation);\n                    this.reservationRegistry.set(reservation.id, reservation);\n                    this.selectedReservation = reservation;\n                    this.editMode = false;\n                    this.loading = false;\n                })\n            } catch (error) {\n                console.log(error);\n                runInAction(() => {\n                    this.loading = false;\n                })\n            }\n    }\n\n    updateReservation = async (reservation : Reservation) => {\n        this.loading = true;\n\n        try {\n            await agent.Reservations.update(reservation);\n\n            runInAction(() => {\n                // this.reservations = [...this.reservations.filter( res => res.id !== reservation.id), reservation];\n                this.reservationRegistry.set(reservation.id, reservation);\n                this.cancelSelectedReservation();\n                this.editMode = false;\n                this.loading = false;\n            })\n        } catch (error) {\n                console.log(error);\n                runInAction(() => {\n                    this.loading = false\n                })\n        }\n    }\n\n    deleteReservation = async (id: string) => {\n        this.loading = true;\n        try {\n            await agent.Reservations.delete(id);\n            runInAction(() => {\n                // this.reservations = [...this.reservations.filter(res => res.id !== id)];\n                this.reservationRegistry.delete(id);\n                if(this.selectedReservation?.id === id) this.cancelSelectedReservation();\n                this.loading = false;\n            })\n\n        } catch (error) {\n            console.log(error);\n            runInAction(() => {\n                this.loading = false\n            })\n        }\n    }\n\n\n    InitStates = () => {\n        this.reservationRegistry = new Map<string, Reservation>();\n        this.selectedReservation = undefined;\n        this.editMode = false;\n        this.loading = false;\n        this.loadingInitial = true;\n        this.pendinApproval = '';\n        this.FilterMode= \"pending\";\n    }\n\n\n\n\n }","import { makeAutoObservable, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { history } from \"../..\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n    \n    user: User | null = null;\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    get isLoggedIn() {\n        return !!this.user;\n    }\n\n    login = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.login(creds);\n            store.commonStore.setToken(user.token);\n            runInAction(() => {\n                this.user = user;\n                user.tempRole === \"admin\" && store.commonStore.setAdmin();\n            });\n            \n            if(user.tempRole === \"admin\") {\n                history.push('/adminRes');\n            } else {\n                history.push('/Reservations');\n            } \n            store.modalStore.closeModal();\n            \n        } catch (error) {\n            throw error;\n        }\n    }\n\n\n    logout = () => {\n        store.commonStore.setToken(null);\n        store.reservationStore.InitStates();\n        window.localStorage.removeItem('jwt');\n\n        this.user = null;\n        history.push('/');\n    }\n\n    register = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.register(creds);\n            store.commonStore.setToken(user.token);\n            runInAction(() => this.user = user);\n            \n            history.push('/Reservations');\n            store.modalStore.closeModal();\n            \n        } catch (error) {\n            throw error;\n        }\n    }\n\n    getUser = async () => {\n        try{\n            const user = await agent.Account.current()\n            runInAction(() => {\n                this.user = user;\n                user.tempRole === \"admin\" && store.commonStore.setAdmin();\n            });\n        } catch (error) {\n            console.log(error);\n            \n        }\n    }\n\n}","\nimport { createContext, useContext } from \"react\";\nimport CommonStore from \"./CommonStore\";\nimport ReservationStore from \"./ReservationStore\";\nimport UserStore from \"./UserStore\";\nimport ModalStore from './modalStore';\nimport AdminReservationStore from './AdminReservationStore';\n\ninterface Store {\n    reservationStore: ReservationStore;\n    adminStore: AdminReservationStore;\n    userStore : UserStore;\n    commonStore: CommonStore;\n    modalStore: ModalStore;\n}\n\nexport const store : Store = {\n    reservationStore: new ReservationStore(),\n    adminStore: new AdminReservationStore(),\n    userStore: new UserStore(),\n    commonStore: new CommonStore(),\n    modalStore: new ModalStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n    return useContext(StoreContext);\n}","import { makeAutoObservable } from \"mobx\";\n\n// import {v4 as uuid} from 'uuid';\nexport default class AdminReservationStore {\n    \n\n    FilterMode: string = \"pending\";\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    setFilterMode = (mode: string) => {\n        this.FilterMode = mode;\n    }\n\n\n }","\nimport { makeAutoObservable } from 'mobx';\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null;\n}\n\n\nexport default class ModalStore {\n    modal: Modal = {\n        open: false,\n        body: null\n    }\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    openModal = (content: JSX.Element) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}","import { observer } from 'mobx-react-lite';\nimport { Button, Container, Dropdown, Image, Menu, MenuItem } from 'semantic-ui-react'\nimport { Link  } from 'react-router-dom';\nimport { useStore } from '../stores/store'\nimport { NavLink } from 'react-router-dom';\n\n\n\nconst NavBar = () => {\n    const {userStore: {user, logout}, commonStore: {isAdmin},reservationStore } = useStore();\n    \n    return (\n       <Menu inverted fixed='top'>\n          <Container>\n              <Menu.Item as={NavLink} exact to='/' header>\n                    <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight: '1rem'}} />\n                    Reservation\n              </Menu.Item>\n                {isAdmin ? \n                    <>\n                        <Menu.Item as={NavLink} to='/adminRes' name=\"Reservations\" /> \n                        {/* <Menu.Item as={NavLink} to='/Users' name=\"Users\" />  */}\n                    </>\n                    :\n                    <>\n                        <Menu.Item as={NavLink} to='/reservations' name=\"Reservations\" />\n                        <Menu.Item>\n                            <Button  onClick={() => reservationStore.openForm()} positive content='Create Reservation'/>\n                            {/* <Button as={NavLink} exact to='/CreateReservation' positive content='Create Reservation'/> */}\n                        </Menu.Item>\n                    </>\n                }\n              \n\n\n              <MenuItem position='right'>\n                  <Image src={user?.image || '/assets/users/1.jpg'} avatar spaced='right' />\n                  <Dropdown pointing='top left' text={user?.displayName} >\n                      <Dropdown.Menu>\n                            <Dropdown.Item as={Link} to={`/profile/${user?.username}`} text='My profile' icon='user' />\n                            <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n                      </Dropdown.Menu>\n\n                  </Dropdown>\n              </MenuItem>\n          </Container>\n       </Menu>\n    )\n}\n\nexport default observer(NavBar)\n","import { Dimmer, Loader } from \"semantic-ui-react\"\n\ninterface Props {\n    inverted?: boolean;\n    content?: string\n}\nconst LoadingComponent = ({inverted=true, content = 'Loading...'}: Props) => {\n    return (\n       <Dimmer active={true} inverted={inverted}>\n           <Loader content={content}/>\n       </Dimmer>\n    )\n}\n\nexport default LoadingComponent\n","import React from 'react'\nimport { Button, Header, Segment } from 'semantic-ui-react'\nimport { useStore } from '../../app/stores/store';\n\nconst FilterReservation = () => {\n\n    const {reservationStore: {setFilterMode}} = useStore();\n\n    return (\n        <Segment>\n            <Header as='h2'>Filter Reservations</Header>\n            <Button color='green' onClick={() => setFilterMode('approved') } >Approved </Button>\n            <Button color='orange' onClick={() => setFilterMode('denied')} >Denied </Button>\n            <Button color='grey' onClick={() => setFilterMode('pending')}>Pending </Button>\n        </Segment>\n    )\n}\n\nexport default FilterReservation\n","import { observer } from \"mobx-react-lite\"\nimport { ChangeEvent, useState } from \"react\"\nimport { Button , Form, Segment } from \"semantic-ui-react\"\nimport { useStore } from \"../../../app/stores/store\"\n\n\nconst ReservationForm = () => {\n\n    const {reservationStore} = useStore();\n    const {selectedReservation, closeForm, createReservation, updateReservation, loading} = reservationStore;\n\n    const initialState = selectedReservation ?? {\n        id: '',\n        title: '',\n        description:'',\n        reservationType:'',\n        date:'',\n        status: 2\n    }\n\n    const [reservation, setReservation] = useState(initialState)\n\n    const handleSubmit = () => {\n        reservation.id ? updateReservation(reservation) : createReservation(reservation);\n    }\n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        const {name, value} = event.target;\n        setReservation({...reservation, [name]: value})\n    }\n    return (\n        <Segment clearing>\n            <Form onSubmit={handleSubmit} autoComplete='off' >\n                <Form.Field>\n                    <label>Full Name</label>\n                    <input placeholder='Full Name' value={reservation.title} name='title' onChange={handleInputChange} />\n                </Form.Field>\n                <Form.Field>\n                    <label>Description</label>\n                    <textarea  placeholder='Description' name='description' value={reservation.description} onChange={handleInputChange}  />\n                </Form.Field>\n                <Form.Input placeholder='Date' type='date' name='date' value={reservation.date} onChange={handleInputChange}  />\n                <Form.Input placeholder='Reservation Type' name='reservationType'  value={reservation.reservationType} onChange={handleInputChange}  />\n                <Button  loading={loading} floated='right' positive type='submit' content='Submit' />\n                <Button onClick={closeForm} floated='right' type='button' content='Cancel' />\n            </Form>\n        </Segment>\n    )\n}\n    \nexport default observer(ReservationForm) \n","import { observer } from \"mobx-react-lite\";\nimport { SyntheticEvent, useState } from \"react\";\nimport { Button, Header, Item, ItemGroup, Label, Segment } from \"semantic-ui-react\"\nimport { useStore } from \"../../../app/stores/store\";\n\n\n\nconst ReservationList = () => {\n    const {reservationStore} = useStore();\n    const {FilteredReservation, deleteReservation, loading} = reservationStore;\n\n    const [target, setTarget] = useState('');\n\n    const handleReservationDelete = (e: SyntheticEvent<HTMLButtonElement>, id: string) => {\n        setTarget(id);\n        deleteReservation(id);\n    }\n\n    return (\n        <Segment>\n            <ItemGroup divided>\n                {\n                    FilteredReservation.length > 0 ?\n                    \n\n                    FilteredReservation.map( res => \n                        \n                        <Item key={res.id} >\n                            <Item.Content>\n                                <Item.Header as='a' >{res.title}</Item.Header>\n                                <Item.Meta>{res.date}</Item.Meta>\n                                <Item.Description>\n                                    <div>{res.description}</div>\n                                </Item.Description>\n                                \n                                {\n                                // eslint-disable-next-line eqeqeq\n                                res.status == 2 &&                                \n                                 <Item.Extra>\n                                    {/* <Button onClick={() => reservationStore.selectReservation(res.id)} floated='right' content='View' color='blue'/> */}\n                                    <Button onClick={()=>{reservationStore.openForm(res.id)}} floated='right' color='blue' content='Edit' />\n                                    <Button  loading={loading && target === res.id} onClick={(e) => handleReservationDelete(e, res.id)} floated='right' content='Delete' color='red'/>\n                                    <Label basic content={res.reservationType}/>\n                                </Item.Extra>\n                                }\n                                {\n                                    // eslint-disable-next-line eqeqeq\n                                    res.status == 1 && \n                                    <Item.Extra> \n                                        <Label basic content={res.reservationType}/>\n                                        <Label as='a' color='teal' floated='right' tag>\n                                            Reservation Approved\n                                        </Label>\n                                    </Item.Extra>\n                                }\n                                {\n                                    // eslint-disable-next-line eqeqeq\n                                    res.status == 0 && \n                                    <Item.Extra> \n                                        <Label basic content={res.reservationType}/>\n                                        <Label as='a' color='red' floated='right' tag>\n                                            Reservation Denied\n                                        </Label>\n                                    </Item.Extra>\n                                }\n\n                            </Item.Content>\n                        </Item>\n\n                        )\n\n                        :\n                        <Header as='h3'>You don't have any reservation</Header>\n                }\n            </ItemGroup>\n        </Segment>\n    )\n}\n\nexport default observer(ReservationList) \n","import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { Grid } from \"semantic-ui-react\"\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport FilterReservation from \"../../filter/FilterReservation\";\nimport ReservationForm from \"../form/ReservationForm\";\nimport ReservationList from \"./ReservationList\";\n\nconst ReservationDashboard = () => {\n    const {reservationStore} = useStore();\n    const {editMode} = reservationStore;\n\n    useEffect(() => { \n        reservationStore.loadingUserReservations();\n    }, [reservationStore])\n  \n  \n    if(reservationStore.loadingInitial) return <LoadingComponent content='Loading content'/>\n    return (\n       <Grid>\n           <Grid.Column width=\"10\">\n                <ReservationList />\n            </Grid.Column>\n           <Grid.Column width=\"6\">\n               <FilterReservation />\n               {/* {\n                selectedReservation && !editMode && \n                <ReservationDetails  />\n               } */}\n               { editMode && \n               <ReservationForm \n                 />  }\n               \n           </Grid.Column>\n       </Grid>\n    )\n}\n\nexport default observer(ReservationDashboard) \n","import React, { ChangeEvent, useState } from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport { Link  } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { useStore } from '../../app/stores/store';\n\nconst LoginForm = () => {\n\n    const {userStore} = useStore();\n  \n    const initialState = {\n        email: '',\n        password: '',\n    }\n\n    const [loginForm, setLoginForm] = useState(initialState)\n    const [isSubmiting, setIsSubmiting] = useState(false)\n    const [error, setError] = useState({status: false, header: '', content: ''})\n    const HandleSubmit = async () => {\n        setIsSubmiting(true)\n        try {\n            await  userStore.login(loginForm)\n            setIsSubmiting(false)\n            setError({status: false, header: '', content: ''})\n        } catch (error) {\n            console.log(error);\n            setError({status: true, header: 'login failed' ,content: 'Incorrect username or password' })\n            setIsSubmiting(false)\n        }\n        \n\n    }\n   \n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        const {name, value} = event.target;\n        setLoginForm({...loginForm, [name]: value})\n    }\n\n    return (\n        <Grid textAlign='center' style={{ height: '100%'}} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450, width: 450 }}>\n            <Header as='h2' color='teal' textAlign='center'>\n                Log-in to your account\n            </Header>\n            <Form onSubmit={HandleSubmit} size='large' error={error.status} >\n                <Segment stacked>\n                <Form.Input fluid icon='user' iconPosition='left' name=\"email\" placeholder='E-mail address' onChange={handleInputChange} />\n                <Form.Input\n                    fluid\n                    icon='lock'\n                    iconPosition='left'\n                    name=\"password\"\n                    placeholder='Password'\n                    type='password'\n                    onChange={handleInputChange}\n                />\n                <Message\n                    error\n                    header={error.header}\n                    content={error.content}\n                />\n                <Button color='teal' fluid size='large' loading={isSubmiting}>\n                    Login\n                </Button>\n                </Segment>\n            </Form>\n            <Message>\n                New to us? <Link to=\"/SignUp\">Sign Up</Link>\n            </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nexport default observer(LoginForm) \n","import React, { ChangeEvent, useState } from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport { Link  } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { useStore } from '../../app/stores/store';\n\nconst RegisterForm = () => {\n\n    const {userStore} = useStore();\n  \n    const initialState = {\n        displayName: '',\n        username:'',\n        email: '',\n        password: '',\n    }\n\n    const [RegisterForm, setRegisterForm] = useState(initialState)\n    const [isSubmiting, setIsSubmiting] = useState(false)\n    const [error, setError] = useState({status: false, header: '', content: ''})\n    const HandleSubmit = async () => {\n        setIsSubmiting(true)\n        try {\n            await  userStore.register(RegisterForm)\n            setIsSubmiting(false)\n            setError({status: false, header: '', content: ''})\n        } catch (error) {\n            console.log(error);\n            setError({status: true, header: 'Register failed' ,content: 'Please try again later' })\n            setIsSubmiting(false)\n        }\n        \n\n    }\n   \n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        const {name, value} = event.target;\n        setRegisterForm({...RegisterForm, [name]: value})\n    }\n\n    return (\n        <Grid textAlign='center' style={{ height: '100%'}} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450, width: 450 }}>\n            <Header as='h2' color='teal' textAlign='center'>\n                Sign-up to your account\n            </Header>\n            <Form onSubmit={HandleSubmit} size='large' error={error.status} autoComplete={false} >\n                <Segment stacked>\n                <Form.Input fluid icon='mail' iconPosition='left' name=\"email\" placeholder='E-mail address' onChange={handleInputChange} />\n                <Form.Input fluid icon='address card' iconPosition='left' name=\"displayName\" placeholder='display name' onChange={handleInputChange} />\n                <Form.Input fluid icon='user' iconPosition='left' name=\"username\" placeholder='username' onChange={handleInputChange} />\n                <Form.Input\n                    fluid\n                    icon='lock'\n                    iconPosition='left'\n                    name=\"password\"\n                    placeholder='Password'\n                    type='password'\n                    onChange={handleInputChange}\n                />\n                <Message\n                    error\n                    header={error.header}\n                    content={error.content}\n                />\n                <Button color='teal' fluid size='large' loading={isSubmiting}>\n                    Register\n                </Button>\n                </Segment>\n            </Form>\n            <Message>\n                Existing user? <Link to=\"/Login\">Login</Link>\n            </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nexport default observer(RegisterForm) \n","import React from 'react'\nimport { Button, Container, Header, Image, Segment } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport { useStore } from '../../app/stores/store';\nimport LoginForm from '../users/LoginForm';\nimport RegisterForm from '../users/RegisterForm';\nimport { observer } from 'mobx-react-lite';\n\n\nconst HomePage = () => {\n    const {userStore, modalStore} = useStore();\n    return (\n        <Segment inverted textAlign='center' vertical className='masthead'>\n            <Container text>\n                <Header as='h1' inverted>\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{marginBottom: 12}} />\n                    Reservations\n                </Header>\n                {userStore.isLoggedIn ? (\n                    <>\n                        <Header as='h2' inverted content='Welcome to YC Reservations' />\n                        <Button as={Link} to='/reservations' size='huge' inverted>\n                            Go to reservations!\n                        </Button>\n                    </>\n                ) : (\n                    <>\n                        <Button onClick={()=> modalStore.openModal(<LoginForm/>)}  size='huge' inverted>\n                            Login!\n                        </Button>\n                        <Button onClick={()=> modalStore.openModal(<RegisterForm/>)}  size='huge' inverted>\n                            Register\n                        </Button>\n                    </>\n                )}\n\n            </Container>\n        </Segment>\n    )\n}\n\nexport default observer(HomePage) \n","import React from 'react'\nimport { useStore } from './../../stores/store';\nimport { Modal } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\n\nconst ModalContainer = () => {\n    const {modalStore} = useStore()\n    return (\n       <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} style={{width: 'max-content'}} >\n           <Modal.Content >\n               {modalStore.modal.body}\n           </Modal.Content>\n       </Modal>\n    )\n}\n\nexport default observer(ModalContainer) \n","import React from 'react'\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useStore } from '../stores/store'\n\ninterface Props extends RouteProps {\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\n\nconst PrivateRoute = ({component: Component, ...rest}: Props) => {\n    const {userStore: {isLoggedIn}} = useStore();\n    return (\n        <Route \n            {...rest}\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\n        />\n    )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Container, Grid, Header, Image } from 'semantic-ui-react'\n\nconst AccessRestriction = () => {\n    return (\n        <Container style={{marginTop: '7em'}}>\n            <Grid>\n                <Grid.Column width={10}>\n                    <div style={{paddingTop: '7em'}} >\n                        <Header as='h1' content='Access Denied' />\n                        <Header  as='h5' content=\"It seems that you're lost. Let us help guide you out and get you back home.\" />\n                        <Button color='teal' as={Link} to=\"/\">Home</Button>\n                        <Button color='blue'>Login</Button>\n                    </div>\n                </Grid.Column>\n                <Grid.Column width={6}>\n                    <Image src='assets/access.png' />\n                </Grid.Column>\n            </Grid>\n\n        </Container>\n    )\n}\n\nexport default AccessRestriction\n","import React from 'react'\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useStore } from '../stores/store'\n\ninterface Props extends RouteProps {\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\n\nconst PrivateAdminRoute = ({component: Component, ...rest}: Props) => {\n    const {commonStore: {isAdmin}, userStore: {isLoggedIn}} = useStore();\n    return (\n        <Route \n            {...rest}\n            render={(props) => isAdmin && isLoggedIn ? <Component {...props} /> : <Redirect to='/RestrictedAccess' />}\n        />\n    )\n}\n\nexport default PrivateAdminRoute\n","// import React, { useEffect, useState } from 'react'\nimport { Button, Card, Image } from 'semantic-ui-react'\nimport { useStore } from '../../../app/stores/store';\nimport { observer } from 'mobx-react-lite';\n\n\nconst AdminReservationList = () => {\n    const {reservationStore} = useStore();\n    const {FilteredReservation, ApproveReservation, DenyReservation} = reservationStore;\n    \n\n    const getRandom = (min: number, max: number) => {\n        return Math.floor(Math.random() * (max - min) + min);\n    } \n\n\n\n\n    return (\n        <Card.Group>\n        {}\n        {FilteredReservation.map(res => (\n        <Card key={res.id} >\n            <Card.Content>\n            <Image\n                floated='right'\n                size='mini'\n                src={`assets/users/${getRandom(1,7)}.jpg`}\n            />\n            <Card.Header>{res.title}</Card.Header>\n            <Card.Meta>{res.date}</Card.Meta>\n            <Card.Description>\n                {res.reservationType}\n            </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n            <div className='ui two buttons'>\n                <Button onClick={()=> ApproveReservation(res.id)} basic color='green'>\n                    Approve\n                </Button>\n                <Button onClick={()=> DenyReservation(res.id)}  basic color='red'>\n                    Deny\n                </Button>\n            </div>\n            </Card.Content>\n        </Card>\n        ))}\n\n\n\n\n    </Card.Group>\n    )\n}\n\nexport default observer(AdminReservationList) \n","import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react'\nimport { Grid, GridColumn} from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\n// import LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useStore } from '../../../app/stores/store';\nimport FilterReservation from '../../filter/FilterReservation';\nimport AdminReservationList from './AdminReservationList';\n\n\n\nconst AdminDashboard = () => {\n    const {reservationStore} = useStore();\n    const {loadingReservations} = reservationStore;\n   \n\n    useEffect(() => { \n         loadingReservations();\n    }, [loadingReservations])\n\n\n    if(reservationStore.loadingInitial) return <LoadingComponent content='Loading content'/>;\n\n  \n\n    return (\n        <Grid>\n            <GridColumn width=\"10\" >\n                <AdminReservationList />\n            </GridColumn>\n            <GridColumn width=\"6\" >\n                {/* <Segment>\n                    <Header as='h2'>Filter Reservations</Header>\n                    <Button color='green' onClick={() => setFilterMode('approved') } >Approved </Button>\n                    <Button color='orange' onClick={() => setFilterMode('denied')} >Denied </Button>\n                    <Button color='grey' onClick={() => setFilterMode('pending')}>Pending </Button>\n                </Segment> */}\n                <FilterReservation />\n                \n            </GridColumn>\n      </Grid>\n    )\n}\n\nexport default observer(AdminDashboard) \n","import React, { Fragment, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ReservationDashboard from '../../features/reservations/dashboard/ReservationDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\n// import ReservationForm from '../../features/reservations/form/ReservationForm';\nimport LoginForm from '../../features/users/LoginForm';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport PrivateRoute from './PrivateRoute';\n// import PrivateAdminRoute from './PrivateAdminRoute';\nimport AccessRestriction from '../../features/security/AccessRestriction';\nimport PrivateAdminRoute from './PrivateAdminRoute';\nimport AdminDashboard from './../../features/reservations/adminDashboard/AdminDashboard';\nfunction App() {\n  const {userStore, commonStore} = useStore();\n\n\n  useEffect(() => { \n      if(commonStore.token) {\n          userStore.getUser().finally(() => commonStore.setAppLoaded());\n      }else {\n        commonStore.setAppLoaded();\n      }\n  }, [commonStore, userStore])\n\n  if(!commonStore.appLoaded) return <LoadingComponent content='loading app ...' />\n\n  // if(reservationStore.loadingInitial) return <LoadingComponent content='Loading content'/>\n\n  const DefaultRoutes = () => {\n    return (\n      <>\n              <NavBar />\n              <Container style={{marginTop: '7em'}}>\n                  {/* <ReservationDashboard  /> */}\n                  <Switch>\n                      <Route exact path='/Login' component={LoginForm} />\n                      <PrivateAdminRoute exact path='/adminRes' component={AdminDashboard} />\n                      <PrivateRoute exact path='/reservations' component={ReservationDashboard} />\n                      {/* <PrivateAdminRoute exact path='/reservations' component={ReservationDashboard}/> */}\n                      {/* <Route exact path='/CreateReservation' component={ReservationForm} /> */}\n                  </Switch>\n              </Container>\n     </>\n    )\n  }\n\n  return (\n    <Fragment>\n      <ModalContainer/>\n      <Switch>\n        <Route exact path='/' component={HomePage} />\n        <Route exact path='/RestrictedAccess' component={AccessRestriction} />\n        <Route component={DefaultRoutes} />\n      </Switch>\n      \n\n         \n    </Fragment>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store, StoreContext} from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n\n  <StoreContext.Provider value={store}>\n  \n    <Router history={history}>\n      <App />\n    </Router>\n   \n  </StoreContext.Provider>\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}